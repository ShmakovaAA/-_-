# Generated by Django 5.1.4 on 2025-04-14 10:12

import api.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('title', models.CharField(help_text='Добавьте название мероприятия.', max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Добавьте описание мероприятия.', null=True, verbose_name='Описание')),
                ('start_date', models.DateField(help_text='Добавьте дату начала события.', verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, help_text='Добавьте дату окончания события (необязательно).', null=True, verbose_name='Дата окончания')),
                ('event_type', models.CharField(choices=[('exhibition', 'Выставка'), ('seminar', 'Семинар'), ('conference', 'Конференция'), ('workshop', 'Мастер-класс')], default='exhibition', help_text='Выберите тип мероприятия.', max_length=20, verbose_name='Тип мероприятия')),
                ('location', models.CharField(help_text='Добавьте населенный пункт проведения события.', max_length=255, verbose_name='Место проведения (НП)')),
                ('links', models.JSONField(blank=True, default=list, help_text='Добавьте ссылки в формате: [https://link-first.ru, https://link-second.com...]', verbose_name='Ссылки')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(help_text='Добавьте данные личности.', max_length=300, verbose_name='Личность')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('title', models.CharField(help_text='Добавьте название события.', max_length=255, verbose_name='Название события')),
                ('start_date', models.DateField(help_text='Добавьте дату начала события.', verbose_name='Дата начала события')),
                ('end_date', models.DateField(blank=True, help_text='Добавьте дату окончания события (необязательно).', null=True, verbose_name='Дата окончания события')),
                ('location', models.CharField(help_text='Добавьте населенный пункт проведения события.', max_length=255, verbose_name='Населенный пункт')),
                ('description', models.TextField(blank=True, help_text='Добавьте подробное описание события.', null=True, verbose_name='Описание события')),
                ('links', models.JSONField(blank=True, default=list, help_text='Добавьте ссылки в формате: [https://link-first.ru, https://link-second.com...]', verbose_name='Ссылки')),
                ('related_events', models.ManyToManyField(blank=True, help_text='Выберите мероприятия привязанные к событию.', related_name='events_related_to_activity', to='api.activity', verbose_name='Привязанные мероприятия')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='related_activities',
            field=models.ManyToManyField(blank=True, help_text='Выберите события привязанные к событию.', related_name='activities_related_to_event', to='api.event', verbose_name='Привязанные события'),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Добавьте название предмета.', max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Добавьте описание предмета.', null=True, verbose_name='Описание')),
                ('activities', models.ManyToManyField(blank=True, help_text='Выберите мероприятие в котором фигурирует предмет.', related_name='related_items', to='api.activity', verbose_name='Привязка к мероприятиям')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.AddField(
            model_name='activity',
            name='items',
            field=models.ManyToManyField(blank=True, help_text='Выберите предметы фигурирующие в мероприятии.', related_name='related_activities', to='api.item', verbose_name='Привязанные предметы'),
        ),
        migrations.CreateModel(
            name='Mediafile',
            fields=[
                ('mediafile_id', models.AutoField(primary_key=True, serialize=False)),
                ('mediafile_type', models.CharField(choices=[('photo', 'Фото'), ('video', 'Видео'), ('document', 'Документ')], help_text='Выберите тип медиафайла (Фото / Видео / Документ).', max_length=10, validators=[api.models.validate_mediafile_type], verbose_name='Тип медиафайла')),
                ('object_id', models.PositiveIntegerField(help_text='Добавьте ID события / мероприятия.', verbose_name='ID активности')),
                ('file_path', models.FileField(help_text='Укажите путь к медиафайлу.', upload_to='', verbose_name='Путь к медиафайлу')),
                ('content_type', models.ForeignKey(help_text='Выберите тип активности (Событие / Мероприятие).', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Тип контента')),
            ],
            options={
                'verbose_name': 'Медифайл',
                'verbose_name_plural': 'Медиафайлы',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='preview_photo',
            field=models.ForeignKey(blank=True, help_text='Выберите превью события.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preview_for_event', to='api.mediafile', verbose_name='Превью фото'),
        ),
        migrations.AddField(
            model_name='activity',
            name='preview_photo',
            field=models.ForeignKey(blank=True, help_text='Выберите превью мероприятия.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preview_for_activities', to='api.mediafile', verbose_name='Превью фото'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(blank=True, help_text='Выберите участников события.', related_name='event_participants', to='api.person', verbose_name='Участники события'),
        ),
    ]
